name: Update Package Managers

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.1)'
        required: true
      tag:
        description: 'Git tag (e.g., v1.0.1)'
        required: true

jobs:
  update-homebrew:
    name: Update Homebrew Tap
    runs-on: macos-latest
    steps:
      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "VERSION=${{ github.event.release.tag_name }}" | sed 's/^v//' >> $GITHUB_OUTPUT
            echo "TAG=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout homebrew tap
        uses: actions/checkout@v4
        with:
          repository: PhilipJohnBasile/homebrew-vecstore
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get SHA256
        id: sha256
        run: |
          SHA256=$(curl -sL https://github.com/PhilipJohnBasile/vecstore/archive/refs/tags/${{ steps.version.outputs.TAG }}.tar.gz | shasum -a 256 | awk '{print $1}')
          echo "SHA256=$SHA256" >> $GITHUB_OUTPUT

      - name: Update formula
        run: |
          sed -i '' 's|version ".*"|version "${{ steps.version.outputs.VERSION }}"|' Formula/vecstore.rb
          sed -i '' 's|url ".*"|url "https://github.com/PhilipJohnBasile/vecstore/archive/refs/tags/${{ steps.version.outputs.TAG }}.tar.gz"|' Formula/vecstore.rb
          sed -i '' 's|sha256 ".*"|sha256 "${{ steps.sha256.outputs.SHA256 }}"|' Formula/vecstore.rb

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/vecstore.rb
          git commit -m "vecstore: update to ${{ steps.version.outputs.VERSION }}"
          git push

  update-scoop:
    name: Update Scoop Bucket
    runs-on: ubuntu-latest
    needs: [update-homebrew]
    steps:
      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "VERSION=${{ github.event.release.tag_name }}" | sed 's/^v//' >> $GITHUB_OUTPUT
            echo "TAG=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout scoop bucket
        uses: actions/checkout@v4
        with:
          repository: PhilipJohnBasile/scoop-vecstore
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get SHA256
        id: sha256
        run: |
          # Wait for binary to be available
          sleep 60
          SHA256=$(curl -sL https://github.com/PhilipJohnBasile/vecstore/releases/download/${{ steps.version.outputs.TAG }}/vecstore-x86_64-pc-windows-msvc.zip | sha256sum | awk '{print $1}')
          echo "SHA256=$SHA256" >> $GITHUB_OUTPUT

      - name: Update manifest
        run: |
          cat > bucket/vecstore.json <<EOF
          {
              "version": "${{ steps.version.outputs.VERSION }}",
              "description": "High-performance vector database with RAG toolkit",
              "homepage": "https://github.com/PhilipJohnBasile/vecstore",
              "license": "MIT",
              "architecture": {
                  "64bit": {
                      "url": "https://github.com/PhilipJohnBasile/vecstore/releases/download/${{ steps.version.outputs.TAG }}/vecstore-x86_64-pc-windows-msvc.zip",
                      "hash": "${{ steps.sha256.outputs.SHA256 }}",
                      "bin": "vecstore-server.exe"
                  }
              }
          }
          EOF

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add bucket/vecstore.json
          git commit -m "vecstore: update to ${{ steps.version.outputs.VERSION }}"
          git push

  create-package-prs:
    name: Create PRs to Package Repositories
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get version info
        id: version
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "VERSION=${{ github.event.release.tag_name }}" | sed 's/^v//' >> $GITHUB_OUTPUT
            echo "TAG=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Create update script
        run: |
          cat > update-packages.sh <<'EOF'
          #!/bin/bash
          set -e

          VERSION="${{ steps.version.outputs.VERSION }}"
          TAG="${{ steps.version.outputs.TAG }}"

          echo "📦 Creating package update PRs for version $VERSION"

          # Get source tarball SHA256
          echo "🔍 Getting source tarball hash..."
          TARBALL_SHA256=$(curl -sL https://github.com/PhilipJohnBasile/vecstore/archive/refs/tags/$TAG.tar.gz | sha256sum | awk '{print $1}')

          # AUR update would go here (needs SSH key)
          # Nix, Conda-forge, MacPorts PRs would be created here
          # Winget PR would be created here

          echo "✅ Package updates ready"
          echo "TARBALL_SHA256=$TARBALL_SHA256"
          EOF

          chmod +x update-packages.sh
          ./update-packages.sh

      - name: Create Issue with Instructions
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ steps.version.outputs.VERSION }}';
            const tag = '${{ steps.version.outputs.TAG }}';

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Manual package updates needed for ${tag}`,
              body: `## Package Updates for ${tag}

              Automated updates completed:
              - ✅ Homebrew tap updated
              - ✅ Scoop bucket updated

              Manual PRs needed (see docs/PUBLISHING-GUIDE.md):

              ### Ready to Submit
              - [ ] Winget - Create PR to microsoft/winget-pkgs
              - [ ] Nix - Create PR to NixOS/nixpkgs
              - [ ] Conda-forge - Create PR to conda-forge/staged-recipes (first time) or feedstock
              - [ ] MacPorts - Create PR to macports/macports-ports

              ### Need Accounts/Setup
              - [ ] AUR - Manual update required
              - [ ] Chocolatey - Manual update required
              - [ ] Snap - snapcraft upload required
              - [ ] Flatpak - Feedstock update required

              **Release binaries:** https://github.com/PhilipJohnBasile/vecstore/releases/tag/${tag}

              Follow the instructions in \`docs/PUBLISHING-GUIDE.md\` for each platform.
              `,
              labels: ['release', 'packaging']
            });
